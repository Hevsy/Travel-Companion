
name: Python/Flask unittest

on: [push]

jobs:
  unittest:

    runs-on: ubuntu-latest
    env:
      STAGE: TEST
      USERNAME: root
      PASS: root
      HOST: localhost

    strategy:
      matrix:
        python: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Launch mysql server
        run: |
            sudo systemctl start mysql.service
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install boto3
          pip install cryptography
      - name: Test with unittest
        run: |
          python -m unittest discover -s ./test  -p 'test*.py'

  container_build_and_push:
    needs: unittest
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tc-alpine:latest